var searchIndex = JSON.parse('{\
"convert":{"doc":"","i":[[0,"transmute","convert","Bit-preserving conversions.",null,null],[5,"safe_transmute","convert::transmute","Reinterprets the bits of a value of one type as another…",null,[[]]],[5,"unsafe_transmute","","Reinterprets the bits of a value of one type as another…",null,[[]]],[0,"stability","","Traits for declaring the SemVer stability of a type\'s…",null,null],[8,"PromiseTransmutableInto","convert::transmute::stability","Promise that a type may be stably transmuted into other…",null,null],[16,"Archetype","","The `Archetype` must be safely transmutable from `Self`.",0,null],[8,"PromiseTransmutableFrom","","Promise that a type may be stably transmuted from other…",null,null],[16,"Archetype","","The `Archetype` must be safely transmutable into `Self`.",1,null],[14,"PromiseTransmutableInto","","Derive macro generating an impl of the trait…",null,null],[14,"PromiseTransmutableFrom","","Derive macro generating an impl of the trait…",null,null],[14,"PromiseTransmutable","","Derive macro generating impls of both…",null,null],[0,"options","convert::transmute","Static checks that may be neglected when determining if…",null,null],[3,"NeglectStability","convert::transmute::options","Neglect the static stability check.",null,null],[8,"SafeTransmuteOptions","","Options that may be used with safe transmutations.",null,null],[8,"UnsafeTransmuteOptions","","Options that may be used with unsafe transmutations.",null,null],[8,"TransmuteInto","convert::transmute","Reinterpret the bits of `Self` as a type `Dst`.",null,null],[10,"transmute_into","","Reinterpret the bits of a value of one type as another…",2,[[]]],[10,"unsafe_transmute_into","","Reinterpret the bits of a value of one type as another…",2,[[]]],[8,"TransmuteFrom","","Reinterpret the bits of `Src` as a type `Self`.",null,null],[11,"transmute_from","","Reinterpret the bits of a value of one type as another…",3,[[]]],[11,"unsafe_transmute_from","","Reinterpret the bits of a value of one type as another…",3,[[]]],[0,"cast","convert","(Extension) Bit-altering conversions.",null,null],[0,"slice","convert::cast","Options for casting the contents of slices.",null,null],[8,"SafeSliceCastOptions","convert::cast::slice","All `SafeTransmuteOptions` are `SafeSliceCastOptions`.",null,null],[8,"UnsafeSliceCastOptions","","All `UnsafeTransmuteOptions` are `UnsafeSliceCastOptions`.",null,null],[8,"SafeCastOptions","convert::cast","",null,null],[8,"UnsafeCastOptions","","",null,null],[8,"CastInto","","",null,null],[11,"cast_into","","",4,[[]]],[11,"unsafe_cast_into","","",4,[[]]],[8,"CastFrom","","",null,null],[11,"cast_from","","",5,[[]]],[10,"unsafe_cast_from","","",5,[[]]],[14,"PromiseTransmutableInto","convert","Derive macro generating an impl of the trait…",null,null],[14,"PromiseTransmutableFrom","","Derive macro generating an impl of the trait…",null,null],[14,"PromiseTransmutable","","Derive macro generating impls of both…",null,null],[11,"transmute_into","convert::transmute::options","",6,[[]]],[11,"unsafe_transmute_into","","",6,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]]],"p":[[8,"PromiseTransmutableInto"],[8,"PromiseTransmutableFrom"],[8,"TransmuteInto"],[8,"TransmuteFrom"],[8,"CastInto"],[8,"CastFrom"],[3,"NeglectStability"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);